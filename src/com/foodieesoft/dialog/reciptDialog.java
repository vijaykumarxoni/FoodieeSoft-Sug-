/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.foodieesoft.dialog;

import com.foodieesoft.beans.OrderDetail;
import com.foodieesoft.dao.OrderDAO;
import com.foodieesoft.dao.ProductDAO;
import com.foodieesoft.daoImpl.OrderDAOImpl;
import com.foodieesoft.daoImpl.ProductDAOImpl;
import com.foodieesoft.frames.SalePage;
import static com.foodieesoft.frames.SalePage.custo_id;
import geeks.foodieesoft.util.CurrentDate;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.eclipse.birt.core.framework.Platform;
import org.eclipse.birt.report.engine.api.EngineConfig;
import org.eclipse.birt.report.engine.api.HTMLRenderOption;
import org.eclipse.birt.report.engine.api.IReportEngine;
import org.eclipse.birt.report.engine.api.IReportEngineFactory;
import org.eclipse.birt.report.engine.api.IReportRunnable;
import org.eclipse.birt.report.engine.api.IRunAndRenderTask;

/**
 *
 * @author Vksoni
 */
public class reciptDialog extends javax.swing.JDialog {


    /**
     * Creates new form NewJDialogReport
     */
    public reciptDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();

    }

    public reciptDialog(java.awt.Frame parent, boolean modal, int items, int total_qty, ArrayList<OrderDetail> order_detail_list, int user_id, String customer_name, int billNum, int discount_id, int discount, int grand_total) {
        super(parent, modal);
        OrderDAO orderDAO=new OrderDAOImpl();
        ProductDAO productDAO=new ProductDAOImpl();
        initComponents();
        this.jTextAreaRecipt.append("------------------------------------------------\n");
        this.jTextAreaRecipt.append("                  FOOIDEE SOFT                  \n");
        this.jTextAreaRecipt.append("------------------------------------------------\n");
        this.jTextAreaRecipt.append("                                                \n");
        this.jTextAreaRecipt.append("                  Sale Recipt                   \n");
        this.jTextAreaRecipt.append("                                                \n");
        this.jTextAreaRecipt.append("------------------------------------------------\n");
        this.jTextAreaRecipt.append(" Bill No: "+orderDAO.getLastOrderId()+"                            \n");
        this.jTextAreaRecipt.append(" Date: " + CurrentDate.getCurrentDate() + "            \n");
        this.jTextAreaRecipt.append(" Customer: " + customer_name + "                           \n");
        this.jTextAreaRecipt.append("------------------------------------------------\n");

        this.jTextAreaRecipt.append(" Item(s)                      QTY Price   Total \n");
        this.jTextAreaRecipt.append("------------------------------------------------\n");
        for (OrderDetail detail : order_detail_list) {
           
            this.jTextAreaRecipt.append(" " + productDAO.getProduct(detail.getProduct_id()).getFood_name() + detail.getQantity() + "   " + detail.getTotal_price() / detail.getQantity() + "   " + detail.getTotal_price() + " \n");

        }
        this.jTextAreaRecipt.append("------------------------------------------------\n");

        this.jTextAreaRecipt.append(" Total  Item(s):" + Double.parseDouble(""+items) + "      Total  QTY: " + Double.parseDouble(""+total_qty) + "                   \n");
        this.jTextAreaRecipt.append("------------------------------------------------\n");
        this.jTextAreaRecipt.append("                            Sales Total :" + Double.parseDouble(""+grand_total) + "       \n");
        this.jTextAreaRecipt.append("                                                \n");
        this.jTextAreaRecipt.append("------------------------------------------------\n");
        this.jTextAreaRecipt.append("       THANKS FOR SHOPPING A FOODIEE SOFT       \n");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelRecipt = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaRecipt = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelRecipt.setBackground(new java.awt.Color(255, 255, 255));
        jPanelRecipt.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextAreaRecipt.setEditable(false);
        jTextAreaRecipt.setColumns(20);
        jTextAreaRecipt.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jTextAreaRecipt.setLineWrap(true);
        jTextAreaRecipt.setRows(5);
        jTextAreaRecipt.setToolTipText("Sale Recipt ");
        jTextAreaRecipt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jTextAreaRecipt.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextAreaRecipt.setOpaque(false);
        jScrollPane2.setViewportView(jTextAreaRecipt);

        jPanelRecipt.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 370, 390));

        jButton1.setBackground(new java.awt.Color(0, 19, 74));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Print Recipt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanelRecipt.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 120, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/geeks/foodieesoft/images/psdFoodieeSoft.png"))); // NOI18N
        jPanelRecipt.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, -1, 170));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/geeks/foodieesoft/images/bg.png"))); // NOI18N
        jPanelRecipt.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 180));

        getContentPane().add(jPanelRecipt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 590));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
       boolean complete= this.jTextAreaRecipt.print();
        if(complete){
        JOptionPane.showMessageDialog(null, "Done Printing","Information",JOptionPane.INFORMATION_MESSAGE);
         this.dispose();
        }
        else{
        JOptionPane.showMessageDialog(null, " Printing","Printer",JOptionPane.ERROR_MESSAGE);
        
        }
        
        }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reciptDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reciptDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reciptDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reciptDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                reciptDialog dialog = new reciptDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void genReport(String from, String to) {

        new Thread(new Runnable() {

            int i = 1;

            @Override
            public void run() {
                while (true) {
                    i += 10;
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                    }

                }
            }
        }).start();

        IReportEngine engine = null;
        EngineConfig config = null;
        Map parameters = new HashMap();
        parameters.put("from", "" + from);
        parameters.put("to", to);
        String reportTitle = "custom report of " + to + " to " + from;
        String path = "Reports\\CustomReports/" + reportTitle + ".pdf";
        File f = new File(path);
        if (f.exists()) {
            f.delete();
        }
        try {

            config = new EngineConfig();
            //config.setLogConfig("c:/temp/test", Level.FINEST);
            Platform.startup(config);
            IReportEngineFactory factory = (IReportEngineFactory) Platform
                    .createFactoryObject(IReportEngineFactory.EXTENSION_REPORT_ENGINE_FACTORY);
            engine = factory.createReportEngine(config);

            IReportRunnable design = null;
            //Open the report design
            String rpath = "reprotFiles/custom_report.rptdesign";

            design = engine.openReportDesign(rpath);

            IRunAndRenderTask task = engine.createRunAndRenderTask(design);
//           task.setParameterValue("custo_id", ""+6);
//            task.validateParameters();
//            // int order=DbManager.getMaxOrder();
            HTMLRenderOption options = new HTMLRenderOption();
            options.setOutputFileName(path);
            options.setOutputFormat("pdf");

            task.setRenderOption(options);

            task.setParameterValues(parameters);

            //options.setHtmlRtLFlag(false);
            //options.setEmbeddable(false);
            //options.setImageDirectory("C:\\test\\images");
            //PDFRenderOption options = new PDFRenderOption();
            //options.setOutputFileName("c:/temp/test.pdf");
            //options.setOutputFormat("pdf");
            task.setRenderOption(options);
            task.run();
            task.close();
            engine.destroy();
        } catch (Exception ex) {
            System.out.println("report generated");
            System.out.println(ex.getMessage());
        } finally {
            Platform.shutdown();
            JOptionPane.showMessageDialog(rootPane, "report scucessfully generated");

            try {

                if ((new File("Reports\\CustomReports/" + reportTitle + ".pdf")).exists()) {

                    Process p = Runtime
                            .getRuntime()
                            .exec("rundll32 url.dll,FileProtocolHandler Reports\\CustomReports/" + reportTitle + ".pdf");
                    p.waitFor();

                } else {

                    System.out.println("File is not exists");

                }

                System.out.println("Done");

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelRecipt;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaRecipt;
    // End of variables declaration//GEN-END:variables
}
