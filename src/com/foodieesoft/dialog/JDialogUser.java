/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.foodieesoft.dialog;

import com.foodieesoft.beans.Employee;
import com.foodieesoft.beans.UserType;

import com.foodieesoft.dao.QuestionsDAO;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import com.foodieesoft.beans.Questions;
import com.foodieesoft.beans.RawMaterial;
import com.foodieesoft.beans.User;
import com.foodieesoft.dao.EmployeeDAO;
import com.foodieesoft.dao.RawProductsDAO;
import com.foodieesoft.dao.UserDAO;
import com.foodieesoft.dao.UserTypesDAO;
import com.foodieesoft.daoImpl.EmployeeDAOImpl;

import org.eclipse.birt.core.framework.Platform;
import org.eclipse.birt.report.engine.api.EngineConfig;
import org.eclipse.birt.report.engine.api.HTMLRenderOption;
import org.eclipse.birt.report.engine.api.IReportEngine;
import org.eclipse.birt.report.engine.api.IReportEngineFactory;
import org.eclipse.birt.report.engine.api.IReportRunnable;
import org.eclipse.birt.report.engine.api.IRunAndRenderTask;
import com.foodieesoft.daoImpl.QuestionsDAOImpl;
import com.foodieesoft.daoImpl.RawProductsDAOImpl;
import com.foodieesoft.daoImpl.UserDAOImpl;
import com.foodieesoft.daoImpl.UserTpesDAOImpl;
import com.foodieesoft.frames.EmployeePage;
import com.foodieesoft.frames.RawMaterialPage;
import geeks.foodieesoft.util.CurrentDate;
import geeks.foodieesoft.util.InputValidation;
import java.awt.Color;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Vksoni
 */
public class JDialogUser extends javax.swing.JDialog {
    /**
     * Creates new form NewJDialogReport
     */
     private int userId;
     private User  user;
      DefaultComboBoxModel comboBoxModelUserType;
    DefaultComboBoxModel comboBoxModelQuestions;
    public ArrayList<UserType> user_types_list;
    public ArrayList<Questions> questions_list;
   

    public JDialogUser(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        
        
        
    }
 public JDialogUser(java.awt.Frame parent, boolean modal,int userId) {
        super(parent, modal);
        this.userId=userId;
        initComponents();
        
        this.jButtonUpdate.setVisible(false);
        this.jButtonDelete.setVisible(false);
        
         comboBoxModelUserType = (DefaultComboBoxModel) this.jComboBoxUserType.getModel();
        this.jComboBoxUserType.setVisible(true);
        comboBoxModelQuestions = (DefaultComboBoxModel) this.jComboBoxQuestions.getModel();
        this.jComboBoxQuestions.setVisible(true);

        
        showInQuestionsComboBox();
        showInUserTypesComboBox();
        
    }

  public JDialogUser(java.awt.Frame parent, boolean modal,int userId,User user,int selectedRow) {
        super(parent, modal);
        this.userId=userId;
        this.user=user;
        initComponents();
         this.jButtonSave.setVisible(false);
         comboBoxModelUserType = (DefaultComboBoxModel) this.jComboBoxUserType.getModel();
        this.jComboBoxUserType.setVisible(true);
        comboBoxModelQuestions = (DefaultComboBoxModel) this.jComboBoxQuestions.getModel();
        this.jComboBoxQuestions.setVisible(true);
        
     
        showInQuestionsComboBox();
        showInUserTypesComboBox();
        
        
        
           int user_type_id = user.getUser_cat_id();
        int question_id = user.getQuestion_id();

        this.jTextFieldUsername.setText(user.getUser_name());
        this.jTextFieldPassword.setText(user.getPassword());
        this.jTextFieldRetypePassword.setText("");
        this.jTextFieldContact.setText(user.getContact_num());
        this.jTextFieldAnswer.setText(user.getAnswer());
        this.jTextFieldAddress.setText(user.getAddress());
        this.jTextFieldName.setText(user.getName());

        QuestionsDAO questionsDAO = new QuestionsDAOImpl();
        UserTypesDAO userTypesDAO = new UserTpesDAOImpl();

        this.jComboBoxUserType.setSelectedItem(userTypesDAO.getUserType(user_type_id));
        this.jComboBoxQuestions.setSelectedItem(questionsDAO.getQuestion(question_id));
        
        
        
       this.jLabelTitle.setText(user.getUser_name());
         
 
  
  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jTextFieldUsername = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jComboBoxUserType = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jTextFieldPassword = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jTextFieldRetypePassword = new javax.swing.JPasswordField();
        jLabelRetype = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jTextFieldName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jComboBoxQuestions = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jTextFieldAddress = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jTextFieldContact = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jTextFieldAnswer = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitle.setBackground(new java.awt.Color(0, 19, 74));
        jLabelTitle.setFont(new java.awt.Font("SimSun-ExtB", 1, 36)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("Create New User Account");
        getContentPane().add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 7, 610, 80));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/geeks/foodieesoft/images/bg.png"))); // NOI18N
        jLabel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jLabel5.setOpaque(true);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 90));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 19, 74), 2, true));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonSave.setBackground(new java.awt.Color(0, 19, 74));
        jButtonSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonSave.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/geeks/foodieesoft/images/save.png"))); // NOI18N
        jButtonSave.setText("Save");
        jButtonSave.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 150, 40));

        jButtonUpdate.setBackground(new java.awt.Color(0, 19, 74));
        jButtonUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/geeks/foodieesoft/images/update.png"))); // NOI18N
        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, 150, 40));

        jButtonDelete.setBackground(new java.awt.Color(0, 19, 74));
        jButtonDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/geeks/foodieesoft/images/delete.png"))); // NOI18N
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 420, 150, 40));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 260, -1));

        jTextFieldUsername.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldUsername.setText("Enter Username...");
        jTextFieldUsername.setBorder(null);
        jTextFieldUsername.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextFieldUsername.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldUsernameMouseClicked(evt);
            }
        });
        jTextFieldUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsernameActionPerformed(evt);
            }
        });
        jTextFieldUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldUsernameKeyPressed(evt);
            }
        });
        jPanel1.add(jTextFieldUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 260, 20));

        jLabel6.setBackground(new java.awt.Color(0, 0, 51));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("USERNAME*");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 20, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 260, -1));

        jComboBoxUserType.setBackground(new java.awt.Color(0, 19, 74));
        jComboBoxUserType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBoxUserType.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxUserType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUserTypeActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxUserType, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 260, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("USER TYPE*");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 260, -1));

        jTextFieldPassword.setBorder(null);
        jTextFieldPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldPasswordMouseClicked(evt);
            }
        });
        jTextFieldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPasswordActionPerformed(evt);
            }
        });
        jTextFieldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPasswordKeyPressed(evt);
            }
        });
        jPanel1.add(jTextFieldPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 260, -1));

        jLabel9.setBackground(new java.awt.Color(0, 0, 51));
        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("PASSWORD*");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, 20));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, 260, -1));

        jTextFieldRetypePassword.setBorder(null);
        jTextFieldRetypePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldRetypePasswordMouseClicked(evt);
            }
        });
        jTextFieldRetypePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRetypePasswordActionPerformed(evt);
            }
        });
        jTextFieldRetypePassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldRetypePasswordKeyPressed(evt);
            }
        });
        jPanel1.add(jTextFieldRetypePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 260, -1));

        jLabelRetype.setBackground(new java.awt.Color(0, 0, 51));
        jLabelRetype.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelRetype.setText("RETYPE PASSWORD*");
        jPanel1.add(jLabelRetype, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, -1, -1));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 260, -1));

        jTextFieldName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldName.setText("Enter Name..");
        jTextFieldName.setBorder(null);
        jTextFieldName.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextFieldName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldNameMouseClicked(evt);
            }
        });
        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });
        jTextFieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNameKeyPressed(evt);
            }
        });
        jPanel1.add(jTextFieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 260, 20));

        jLabel8.setBackground(new java.awt.Color(0, 0, 51));
        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("NAME*");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));
        jPanel1.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 540, -1));

        jComboBoxQuestions.setBackground(new java.awt.Color(0, 19, 74));
        jComboBoxQuestions.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBoxQuestions.setForeground(new java.awt.Color(255, 255, 255));
        jComboBoxQuestions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxQuestionsActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxQuestions, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 540, -1));

        jLabel12.setBackground(new java.awt.Color(0, 0, 51));
        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("QUESTION");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 370, -1));
        jPanel1.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 540, -1));

        jTextFieldAddress.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldAddress.setText("Enter Address..");
        jTextFieldAddress.setBorder(null);
        jTextFieldAddress.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextFieldAddress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldAddressMouseClicked(evt);
            }
        });
        jTextFieldAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAddressActionPerformed(evt);
            }
        });
        jTextFieldAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAddressKeyPressed(evt);
            }
        });
        jPanel1.add(jTextFieldAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 540, -1));

        jLabel11.setBackground(new java.awt.Color(0, 0, 51));
        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("ADDRESS");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 360, -1));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 260, -1));

        jTextFieldContact.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldContact.setText("Enter Contact...");
        jTextFieldContact.setBorder(null);
        jTextFieldContact.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextFieldContact.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldContactMouseClicked(evt);
            }
        });
        jTextFieldContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldContactActionPerformed(evt);
            }
        });
        jTextFieldContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldContactKeyPressed(evt);
            }
        });
        jPanel1.add(jTextFieldContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 260, 20));

        jLabel10.setBackground(new java.awt.Color(0, 0, 51));
        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("CONTACT*");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, -1, 20));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("ANSWER");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 350, 20));
        jPanel1.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 540, -1));

        jTextFieldAnswer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldAnswer.setText("Enter Answer...");
        jTextFieldAnswer.setBorder(null);
        jTextFieldAnswer.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextFieldAnswer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldAnswerMouseClicked(evt);
            }
        });
        jTextFieldAnswer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAnswerActionPerformed(evt);
            }
        });
        jTextFieldAnswer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAnswerKeyPressed(evt);
            }
        });
        jPanel1.add(jTextFieldAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 540, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 610, 480));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed

        int dialogButton = JOptionPane.showConfirmDialog (null, "Are you sure?","WARNING",JOptionPane.YES_NO_OPTION);

        if(dialogButton == JOptionPane.YES_OPTION) {
        int users_id = user.getUser_id();
        UserDAO userDAO = new UserDAOImpl();
        int i = userDAO.removeUser(new User(users_id, 0, 0, 0, 0, 0, "", "", "", "", "", "", "", ""));

        if (i != 0) {
            this.dispose();
            JOptionPane.showMessageDialog(this, "Deleted Sucessfully");

        
        }}else {}
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:

        
        int dialogButton = JOptionPane.showConfirmDialog (null, "Are you sure?","Save Update",JOptionPane.YES_NO_OPTION);
        int user_cat_id = user_types_list.get(this.jComboBoxUserType.getSelectedIndex()).getUser_cat_id();
        int question_id = questions_list.get(this.jComboBoxQuestions.getSelectedIndex()).getQuestion_id();
        int user_selected_id = user.getUser_id();
        String username = this.jTextFieldUsername.getText();
        String password = this.jTextFieldPassword.getText();
        String reTypePassword = this.jTextFieldRetypePassword.getText();
        String name = this.jTextFieldName.getText();
        String contact = this.jTextFieldContact.getText();
        String address = this.jTextFieldAddress.getText();
        String answer = this.jTextFieldAnswer.getText();

        if(dialogButton == JOptionPane.YES_OPTION) {

        if (!(username.equalsIgnoreCase("Enter Username...") || password.equalsIgnoreCase("Enter Password...")
                || reTypePassword.equalsIgnoreCase("Retype Password...")
                || name.equalsIgnoreCase("Enter Name..") || username.equalsIgnoreCase("") || password.equalsIgnoreCase("")
                || reTypePassword.equalsIgnoreCase("")
                || name.equalsIgnoreCase("") || name.equalsIgnoreCase(""))) {

//            if (contact.equalsIgnoreCase("Enter Contact...")) {
//                contact = "";
//            }
//            if (answer.equalsIgnoreCase("Enter Answer...")) {
//                answer = "";
//            }
//            if (address.equalsIgnoreCase("Enter Address..")) {
//                address = "";
//            }
//            if (!InputValidation.validateName(username)) {
//                JOptionPane.showMessageDialog(this, "Invalid username Format!");
//            } else if (!InputValidation.validateName(name)) {
//                JOptionPane.showMessageDialog(this, "Invalid name Format!");
//            } else if (!contact.equalsIgnoreCase("")) {
//                if (!InputValidation.validatePhoneNum(contact)) {
//                    JOptionPane.showMessageDialog(this, "Invalid contact Format!");
//                }
             if (reTypePassword.equals(password)) {
                UserDAO userDAO = new UserDAOImpl();

                int status = userDAO.modifyUser(
                        new User(user_selected_id, user_cat_id, question_id, 1, userId, userId, username, password, name,
                                address, CurrentDate.getCurrentDate(), contact, answer, CurrentDate.getCurrentDate()));
                this.jLabelRetype.setForeground(Color.black);

                if (status != 0) {
                    JOptionPane.showMessageDialog(this, "Successfully updated");
                    this.dispose();
                   

                }
            } else {
                JOptionPane.showMessageDialog(this, "Password not match");
                this.jLabelRetype.setForeground(Color.red);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill required field");

        }

        
        }else {}
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed

        int user_cat_id = user_types_list.get(this.jComboBoxUserType.getSelectedIndex()).getUser_cat_id();
        int question_id = questions_list.get(this.jComboBoxQuestions.getSelectedIndex()).getQuestion_id();
        String regx_for_name = "^[a-zA-Z\\s]+$", regx_phone_num = "^[0-9]+$";
        Pattern p_name = Pattern.compile(regx_for_name);
        Pattern p_contact_num = Pattern.compile(regx_phone_num);

        Matcher matcher_name = p_name.matcher(this.jTextFieldName.getText().toString().trim());
        Matcher matcher_uname = p_name.matcher(this.jTextFieldUsername.getText().toString().trim());
        Matcher matcher_contact_num = p_contact_num.matcher(this.jTextFieldContact.getText().toString().trim());

        String username = this.jTextFieldUsername.getText().trim();
        String password = this.jTextFieldPassword.getText().trim();
        String reTypePassword = this.jTextFieldRetypePassword.getText().trim();
        String name = this.jTextFieldName.getText().trim();
        String contact = this.jTextFieldContact.getText().trim();
        String address = this.jTextFieldAddress.getText().trim();
        String answer = this.jTextFieldAnswer.getText().trim();

        if (!(username.equalsIgnoreCase("Enter Username...") || password.equalsIgnoreCase("Enter Password...")
                || reTypePassword.equalsIgnoreCase("Retype Password...")
                || name.equalsIgnoreCase("Enter Name..") || username.equalsIgnoreCase("") || password.equalsIgnoreCase("")
                || reTypePassword.equalsIgnoreCase("")
                || name.equalsIgnoreCase("") || name.equalsIgnoreCase(""))||contact.equalsIgnoreCase("Enter Contact...")||
                contact.equalsIgnoreCase("")) {

            
            if (answer.equalsIgnoreCase("Enter Answer...")) {
                answer = "";
            }
            if (address.equalsIgnoreCase("Enter Address..")) {
                address = "";
            }

            if (!InputValidation.validateName(name)) {
                JOptionPane.showMessageDialog(this, "Invalid name Format!");
            }
            if (!InputValidation.validatePhoneNum(contact)) {
                JOptionPane.showMessageDialog(this, "Invalid contact Format!");
            } else if (reTypePassword.equals(password)) {
                UserDAO userDAO = new UserDAOImpl();

                int status = userDAO.saveUsers(
                        new User(0, user_cat_id, question_id, 1, userId, 0, username, password, name,
                                address, "", contact, answer, CurrentDate.getCurrentDate()));

                if (status == 1) {
                    this.dispose();
                    JOptionPane.showMessageDialog(this, "Successfully added");

                }
                if (status == -1) {
                    JOptionPane.showMessageDialog(this, "User already exist! try another username and contact number");

                }
            } else {
                JOptionPane.showMessageDialog(this, "Password not match");
            }
        } else {

            JOptionPane.showMessageDialog(this, "Please fill required field");}
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTextFieldUsernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldUsernameMouseClicked
        // TODO add your handling code here:

        if (this.jTextFieldUsername.getText().equalsIgnoreCase("Enter Username...")) {
            this.jTextFieldUsername.setText("");
        }
    }//GEN-LAST:event_jTextFieldUsernameMouseClicked

    private void jTextFieldUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUsernameActionPerformed

    private void jTextFieldUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldUsernameKeyPressed
        // TODO add your handling code here:
        if (this.jTextFieldUsername.getText().equalsIgnoreCase("Enter Username...")) {
            this.jTextFieldUsername.setText("");
        }
    }//GEN-LAST:event_jTextFieldUsernameKeyPressed

    private void jComboBoxUserTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUserTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxUserTypeActionPerformed

    private void jTextFieldPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldPasswordMouseClicked
        if (this.jTextFieldPassword.getText().equalsIgnoreCase("Enter Password...")) {
            this.jTextFieldPassword.setText("");
        }
    }//GEN-LAST:event_jTextFieldPasswordMouseClicked

    private void jTextFieldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPasswordActionPerformed

    private void jTextFieldPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPasswordKeyPressed
        if (this.jTextFieldPassword.getText().equalsIgnoreCase("Enter Password...")) {
            this.jTextFieldPassword.setText("");
        }
    }//GEN-LAST:event_jTextFieldPasswordKeyPressed

    private void jTextFieldRetypePasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldRetypePasswordMouseClicked
        // TODO add your handling code here:
        if (this.jTextFieldRetypePassword.getText().equalsIgnoreCase("Retype Password...")) {
            this.jTextFieldRetypePassword.setText("");
        }
    }//GEN-LAST:event_jTextFieldRetypePasswordMouseClicked

    private void jTextFieldRetypePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRetypePasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRetypePasswordActionPerformed

    private void jTextFieldRetypePasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRetypePasswordKeyPressed
        // TODO add your handling code here:
        if (this.jTextFieldRetypePassword.getText().equalsIgnoreCase("Retype Password...")) {
            this.jTextFieldRetypePassword.setText("");
        }
    }//GEN-LAST:event_jTextFieldRetypePasswordKeyPressed

    private void jTextFieldNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldNameMouseClicked
        // TODO add your handling code here:
        if (this.jTextFieldName.getText().equalsIgnoreCase("Enter Name..")) {
            this.jTextFieldName.setText("");
        }
    }//GEN-LAST:event_jTextFieldNameMouseClicked

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameActionPerformed

    private void jTextFieldNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNameKeyPressed
        // TODO add your handling code here:
        if (this.jTextFieldName.getText().equalsIgnoreCase("Enter Name..")) {
            this.jTextFieldName.setText("");
        }

    }//GEN-LAST:event_jTextFieldNameKeyPressed

    private void jComboBoxQuestionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxQuestionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxQuestionsActionPerformed

    private void jTextFieldAddressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAddressMouseClicked
        // TODO add your handling code here:

        if (this.jTextFieldAddress.getText().equalsIgnoreCase("Enter Address..")) {
            this.jTextFieldAddress.setText("");
        }
    }//GEN-LAST:event_jTextFieldAddressMouseClicked

    private void jTextFieldAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAddressActionPerformed

    private void jTextFieldAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAddressKeyPressed
        // TODO add your handling code here:
        if (this.jTextFieldAddress.getText().equalsIgnoreCase("Enter Address..")) {
            this.jTextFieldAddress.setText("");
        }

    }//GEN-LAST:event_jTextFieldAddressKeyPressed

    private void jTextFieldContactMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldContactMouseClicked
        // TODO add your handling code here:

        if (this.jTextFieldContact.getText().equalsIgnoreCase("Enter Contact...")) {
            this.jTextFieldContact.setText("");
        }
    }//GEN-LAST:event_jTextFieldContactMouseClicked

    private void jTextFieldContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldContactActionPerformed

    private void jTextFieldContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldContactKeyPressed
        // TODO add your handling code here:
        if (this.jTextFieldContact.getText().equalsIgnoreCase("Enter Contact...")) {
            this.jTextFieldContact.setText("");
        }
    }//GEN-LAST:event_jTextFieldContactKeyPressed

    private void jTextFieldAnswerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAnswerMouseClicked
        // TODO add your handling code here:

        if (this.jTextFieldAnswer.getText().equalsIgnoreCase("Enter Answer...")) {
            this.jTextFieldAnswer.setText("");
        }
    }//GEN-LAST:event_jTextFieldAnswerMouseClicked

    private void jTextFieldAnswerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAnswerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAnswerActionPerformed

    private void jTextFieldAnswerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAnswerKeyPressed
        // TODO add your handling code here:
        if (this.jTextFieldAnswer.getText().equalsIgnoreCase("Enter Answer...")) {
            this.jTextFieldAnswer.setText("");
        }
    }//GEN-LAST:event_jTextFieldAnswerKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogUser dialog = new JDialogUser(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    public void genReport(String from ,String to) {

        new Thread(new Runnable() {

            int i = 1;

            @Override
            public void run() {
                while (true) {
                    i += 10;
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                    }

                }
            }
        }).start();

        IReportEngine engine = null;
        EngineConfig config = null;
        Map parameters = new HashMap();
        parameters.put("from", "" + from);
        parameters.put("to", to);
        String reportTitle = "custom report of "+to+" to "+from;
        String path = "Reports\\CustomReports/" + reportTitle + ".pdf";
        File f = new File(path);
        if (f.exists()) {
            f.delete();
        }
        try {

            config = new EngineConfig();
            //config.setLogConfig("c:/temp/test", Level.FINEST);
            Platform.startup(config);
            IReportEngineFactory factory = (IReportEngineFactory) Platform
                    .createFactoryObject(IReportEngineFactory.EXTENSION_REPORT_ENGINE_FACTORY);
            engine = factory.createReportEngine(config);

            IReportRunnable design = null;
            //Open the report design
            String rpath = "reprotFiles/custom_report.rptdesign";

            design = engine.openReportDesign(rpath);

            IRunAndRenderTask task = engine.createRunAndRenderTask(design);
//           task.setParameterValue("custo_id", ""+6);
//            task.validateParameters();
//            // int order=DbManager.getMaxOrder();
            HTMLRenderOption options = new HTMLRenderOption();
            options.setOutputFileName(path);
            options.setOutputFormat("pdf");

            task.setRenderOption(options);

            task.setParameterValues(parameters);

            //options.setHtmlRtLFlag(false);
            //options.setEmbeddable(false);
            //options.setImageDirectory("C:\\test\\images");
            //PDFRenderOption options = new PDFRenderOption();
            //options.setOutputFileName("c:/temp/test.pdf");
            //options.setOutputFormat("pdf");
            task.setRenderOption(options);
            task.run();
            task.close();
            engine.destroy();
        } catch (Exception ex) {
            System.out.println("report generated");
            System.out.println(ex.getMessage());
        } finally {
            Platform.shutdown();
            JOptionPane.showMessageDialog(rootPane, "report scucessfully generated");

            try {

                if ((new File("Reports\\CustomReports/" + reportTitle + ".pdf")).exists()) {

                    Process p = Runtime
                            .getRuntime()
                            .exec("rundll32 url.dll,FileProtocolHandler Reports\\CustomReports/" + reportTitle + ".pdf");
                    p.waitFor();

                } else {

                    System.out.println("File is not exists");

                }

                System.out.println("Done");

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
    
    public void showInUserTypesComboBox() {
        UserTypesDAO userTypesDAO = new UserTpesDAOImpl();
        user_types_list = userTypesDAO.getAllUserTypes();
        for (UserType userType : user_types_list) {

            this.jComboBoxUserType.addItem("" + userType.getUser_type());

        }
    }

    public void showInQuestionsComboBox() {
        QuestionsDAO questionsDAO = new QuestionsDAOImpl();
        questions_list = questionsDAO.getAllQuestions();
        for (Questions question : questions_list) {

            this.jComboBoxQuestions.addItem("" + question.getQuestions());

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxQuestions;
    private javax.swing.JComboBox<String> jComboBoxUserType;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelRetype;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldAnswer;
    private javax.swing.JTextField jTextFieldContact;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JPasswordField jTextFieldPassword;
    private javax.swing.JPasswordField jTextFieldRetypePassword;
    private javax.swing.JTextField jTextFieldUsername;
    // End of variables declaration//GEN-END:variables
}
